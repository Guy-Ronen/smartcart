components:
  schemas:
    Body_process_receipt_api_v1_process_receipt_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_process_receipt_api_v1_process_receipt_post
      type: object
    Category:
      enum:
      - FRUITS
      - VEGETABLES
      - MEAT
      - FISH
      - DAIRY
      - BAKED
      - SWEETS
      - DRINKS
      - ALCOHOL
      - CANNED
      - FROZEN
      - COSMETICS
      - SPICES
      - OTHER
      title: Category
      type: string
    Currency:
      const: EUR
      enum:
      - EUR
      title: Currency
      type: string
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Item:
      properties:
        category:
          $ref: '#/components/schemas/Category'
        name:
          title: Name
          type: string
        price:
          title: Price
          type: number
        quantity:
          title: Quantity
          type: integer
        total:
          title: Total
          type: number
      required:
      - name
      - price
      - quantity
      - total
      - category
      title: Item
      type: object
    Market:
      enum:
      - ALDI
      - LIDL
      - NETTO
      - REWE
      - EDEKA
      - KAUFLAND
      - PENNY
      - REAL
      - DM
      - OTHER
      title: Market
      type: string
    ReceiptSchema-Input:
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        date:
          title: Date
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: Items
          type: array
        market:
          $ref: '#/components/schemas/Market'
        receipt_id:
          title: Receipt Id
          type: string
        total:
          title: Total
          type: number
        user_id:
          title: User Id
          type: string
      required:
      - receipt_id
      - user_id
      - items
      - total
      - date
      - currency
      - market
      title: ReceiptSchema
      type: object
    ReceiptSchema-Output:
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        date:
          title: Date
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: Items
          type: array
        market:
          $ref: '#/components/schemas/Market'
        receipt_id:
          title: Receipt Id
          type: string
        total:
          title: Total
          type: number
        user_id:
          title: User Id
          type: string
      required:
      - receipt_id
      - user_id
      - items
      - total
      - date
      - currency
      - market
      title: ReceiptSchema
      type: object
    UserLogin:
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: UserLogin
      type: object
    UserProfileResponse:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_active:
          title: Is Active
          type: boolean
        last_name:
          title: Last Name
          type: string
        user_id:
          title: User Id
          type: string
      required:
      - user_id
      - email
      - first_name
      - last_name
      - is_active
      title: UserProfileResponse
      type: object
    UserResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
        user:
          $ref: '#/components/schemas/UserProfileResponse'
      required:
      - access_token
      - token_type
      - user
      title: UserResponse
      type: object
    UserSignUp:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      - first_name
      - last_name
      title: UserSignUp
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /:
    get:
      operationId: root__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Root
  /api/v1/login:
    post:
      operationId: login_api_v1_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
  /api/v1/process_receipt:
    post:
      operationId: process_receipt_api_v1_process_receipt_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_process_receipt_api_v1_process_receipt_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Process Receipt
  /api/v1/receipts:
    get:
      operationId: get_receipts_api_v1_receipts_get
      parameters:
      - description: Month (1-12)
        in: query
        name: month
        required: false
        schema:
          anyOf:
          - maximum: 12
            minimum: 1
            type: integer
          - type: 'null'
          description: Month (1-12)
          title: Month
      - description: Year (2000-2100)
        in: query
        name: year
        required: false
        schema:
          anyOf:
          - maximum: 2100
            minimum: 2000
            type: integer
          - type: 'null'
          description: Year (2000-2100)
          title: Year
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReceiptSchema-Output'
                title: Response Get Receipts Api V1 Receipts Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Receipts
    post:
      operationId: create_receipt_api_v1_receipts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptSchema-Input'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Receipt
  /api/v1/receipts/{receipt_id}:
    delete:
      operationId: delete_receipt_api_v1_receipts__receipt_id__delete
      parameters:
      - in: path
        name: receipt_id
        required: true
        schema:
          title: Receipt Id
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Receipt
    get:
      operationId: get_receipt_api_v1_receipts__receipt_id__get
      parameters:
      - in: path
        name: receipt_id
        required: true
        schema:
          title: Receipt Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Receipt
    put:
      operationId: update_receipt_api_v1_receipts__receipt_id__put
      parameters:
      - in: path
        name: receipt_id
        required: true
        schema:
          title: Receipt Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptSchema-Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Receipt
  /api/v1/signup:
    post:
      operationId: signup_api_v1_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
  /health:
    get:
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health
