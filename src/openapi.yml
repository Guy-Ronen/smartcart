components:
  schemas:
    AddressNorm:
      properties:
        building:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Building
        city:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Country
        number:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Number
        postcode:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Postcode
        state:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: State
        street:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Street
        suburb:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Suburb
      title: AddressNorm
      type: object
    Body_process_receipt_api_v1_process_receipt_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_process_receipt_api_v1_process_receipt_post
      type: object
    Category:
      enum:
      - FRUITS
      - VEGETABLES
      - MEAT
      - FISH
      - DAIRY
      - BREAD
      - SWEETS
      - DRINKS
      - ALCOHOL
      - CANNED
      - FROZEN
      - OTHER
      title: Category
      type: string
    Currency:
      const: EUR
      enum:
      - EUR
      title: Currency
      type: string
    CustomFields:
      properties:
        CardLast4Digits:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Cardlast4Digits
        Country:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Country
        Currency:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Currency
        ExpenseType:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Expensetype
        PaymentMethod:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Paymentmethod
        StoreID:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Storeid
        URL:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Url
        VATNumber:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Vatnumber
      title: CustomFields
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Item:
      properties:
        category:
          $ref: '#/components/schemas/Category'
        name:
          title: Name
          type: string
        price:
          title: Price
          type: number
        quantity:
          title: Quantity
          type: integer
        total:
          title: Total
          type: number
      required:
      - name
      - price
      - quantity
      - total
      - category
      title: Item
      type: object
    LineItem:
      properties:
        customFields:
          additionalProperties:
            type: string
          title: Customfields
          type: object
        desc:
          title: Desc
          type: string
        descClean:
          title: Descclean
          type: string
        discount:
          title: Discount
          type: number
        lineTotal:
          title: Linetotal
          type: number
        lineType:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Linetype
        price:
          title: Price
          type: number
        productCode:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Productcode
        qty:
          title: Qty
          type: integer
        symbols:
          items:
            type: string
          title: Symbols
          type: array
        unit:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Unit
      required:
      - qty
      - desc
      - price
      - symbols
      - discount
      - descClean
      - lineTotal
      - customFields
      title: LineItem
      type: object
    Market:
      enum:
      - ALDI
      - LIDL
      - NETTO
      - REWE
      - EDEKA
      - KAUFLAND
      - PENNY
      - REAL
      title: Market
      type: string
    ReceiptResult:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Address
        addressNorm:
          $ref: '#/components/schemas/AddressNorm'
        barcodes:
          items: {}
          title: Barcodes
          type: array
        cash:
          title: Cash
          type: number
        cashConfidence:
          title: Cashconfidence
          type: number
        change:
          title: Change
          type: number
        changeConfidence:
          title: Changeconfidence
          type: number
        currency:
          title: Currency
          type: string
        customFields:
          $ref: '#/components/schemas/CustomFields'
        date:
          title: Date
          type: string
        dateConfidence:
          title: Dateconfidence
          type: number
        dateISO:
          format: date-time
          title: Dateiso
          type: string
        discount:
          title: Discount
          type: number
        discountConfidences:
          items: {}
          title: Discountconfidences
          type: array
        discounts:
          items: {}
          title: Discounts
          type: array
        documentType:
          title: Documenttype
          type: string
        establishment:
          title: Establishment
          type: string
        establishmentConfidence:
          title: Establishmentconfidence
          type: number
        expenseType:
          title: Expensetype
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/LineItem'
          title: Lineitems
          type: array
        otherData:
          items: {}
          title: Otherdata
          type: array
        paymentMethod:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Paymentmethod
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Phonenumber
        rounding:
          title: Rounding
          type: number
        roundingConfidence:
          title: Roundingconfidence
          type: number
        serviceChargeConfidences:
          items: {}
          title: Servicechargeconfidences
          type: array
        serviceCharges:
          items: {}
          title: Servicecharges
          type: array
        subTotal:
          title: Subtotal
          type: number
        subTotalConfidence:
          title: Subtotalconfidence
          type: number
        summaryItems:
          items:
            $ref: '#/components/schemas/LineItem'
          title: Summaryitems
          type: array
        tax:
          title: Tax
          type: number
        taxes:
          items: {}
          title: Taxes
          type: array
        taxesConfidence:
          items: {}
          title: Taxesconfidence
          type: array
        tip:
          title: Tip
          type: number
        tipConfidence:
          title: Tipconfidence
          type: number
        total:
          title: Total
          type: number
        totalConfidence:
          title: Totalconfidence
          type: number
        url:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Url
        validatedEstablishment:
          title: Validatedestablishment
          type: boolean
        validatedSubTotal:
          title: Validatedsubtotal
          type: boolean
        validatedTotal:
          title: Validatedtotal
          type: boolean
      required:
      - establishment
      - validatedEstablishment
      - date
      - total
      - cash
      - change
      - validatedTotal
      - subTotal
      - validatedSubTotal
      - tax
      - tip
      - taxes
      - serviceCharges
      - discount
      - rounding
      - discounts
      - lineItems
      - summaryItems
      - subTotalConfidence
      - taxesConfidence
      - serviceChargeConfidences
      - discountConfidences
      - totalConfidence
      - dateConfidence
      - establishmentConfidence
      - tipConfidence
      - cashConfidence
      - changeConfidence
      - roundingConfidence
      - customFields
      - documentType
      - currency
      - barcodes
      - dateISO
      - addressNorm
      - expenseType
      - otherData
      title: ReceiptResult
      type: object
    ReceiptSchema-Input:
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        date:
          title: Date
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: Items
          type: array
        market:
          $ref: '#/components/schemas/Market'
        receipt_id:
          title: Receipt Id
          type: string
        total:
          title: Total
          type: number
        user_id:
          title: User Id
          type: string
      required:
      - receipt_id
      - user_id
      - items
      - total
      - date
      - currency
      - market
      title: ReceiptSchema
      type: object
    ReceiptSchema-Output:
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        date:
          title: Date
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: Items
          type: array
        market:
          $ref: '#/components/schemas/Market'
        receipt_id:
          title: Receipt Id
          type: string
        total:
          title: Total
          type: number
        user_id:
          title: User Id
          type: string
      required:
      - receipt_id
      - user_id
      - items
      - total
      - date
      - currency
      - market
      title: ReceiptSchema
      type: object
    ResponseSchema:
      properties:
        code:
          title: Code
          type: integer
        message:
          title: Message
          type: string
        result:
          $ref: '#/components/schemas/ReceiptResult'
        status:
          title: Status
          type: string
        status_code:
          title: Status Code
          type: integer
        success:
          title: Success
          type: boolean
      required:
      - message
      - status
      - status_code
      - result
      - success
      - code
      title: ResponseSchema
      type: object
    UserLogin:
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: UserLogin
      type: object
    UserProfileResponse:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_active:
          title: Is Active
          type: boolean
        last_name:
          title: Last Name
          type: string
        user_id:
          title: User Id
          type: string
      required:
      - user_id
      - email
      - first_name
      - last_name
      - is_active
      title: UserProfileResponse
      type: object
    UserResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
        user:
          $ref: '#/components/schemas/UserProfileResponse'
      required:
      - access_token
      - token_type
      - user
      title: UserResponse
      type: object
    UserSignUp:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      - first_name
      - last_name
      title: UserSignUp
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /:
    get:
      operationId: root__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Root
  /api/v1/login:
    post:
      operationId: login_api_v1_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
  /api/v1/process_receipt:
    post:
      operationId: process_receipt_api_v1_process_receipt_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_process_receipt_api_v1_process_receipt_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Process Receipt
  /api/v1/receipts:
    get:
      operationId: get_receipts_api_v1_receipts_get
      parameters:
      - description: Month (1-12)
        in: query
        name: month
        required: false
        schema:
          anyOf:
          - maximum: 12
            minimum: 1
            type: integer
          - type: 'null'
          description: Month (1-12)
          title: Month
      - description: Year (2000-2100)
        in: query
        name: year
        required: false
        schema:
          anyOf:
          - maximum: 2100
            minimum: 2000
            type: integer
          - type: 'null'
          description: Year (2000-2100)
          title: Year
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReceiptSchema-Output'
                title: Response Get Receipts Api V1 Receipts Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Receipts
    post:
      operationId: create_receipt_api_v1_receipts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptSchema-Input'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Receipt
  /api/v1/receipts/{receipt_id}:
    delete:
      operationId: delete_receipt_api_v1_receipts__receipt_id__delete
      parameters:
      - in: path
        name: receipt_id
        required: true
        schema:
          title: Receipt Id
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Receipt
    get:
      operationId: get_receipt_api_v1_receipts__receipt_id__get
      parameters:
      - in: path
        name: receipt_id
        required: true
        schema:
          title: Receipt Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Receipt
    put:
      operationId: update_receipt_api_v1_receipts__receipt_id__put
      parameters:
      - in: path
        name: receipt_id
        required: true
        schema:
          title: Receipt Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptSchema-Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptSchema-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Receipt
  /api/v1/signup:
    post:
      operationId: signup_api_v1_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
  /health:
    get:
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health
